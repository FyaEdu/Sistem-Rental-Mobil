{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "eb28118d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== DAFTAR MOBIL ===\n",
      "B1234AA - Toyota Avanza | Tersedia | Rp350000/hari\n",
      "B5678BB - Honda Brio | Tersedia | Rp300000/hari\n",
      "B9999CC - Suzuki Ertiga | Tersedia | Rp400000/hari\n",
      "\n",
      "====== STRUK RENTAL MOBIL ======\n",
      "Pelanggan : Andi (KTP: 1234567890)\n",
      "Mobil     : B1234AA - Toyota Avanza | Disewa | Rp350000/hari\n",
      "Lama Sewa : 3 hari\n",
      "Total Biaya: Rp1050000\n",
      "Tanggal Mulai: 10-10-2025 20:42\n",
      "================================\n",
      "\n",
      "=== DAFTAR MOBIL ===\n",
      "B1234AA - Toyota Avanza | Disewa | Rp350000/hari\n",
      "B5678BB - Honda Brio | Tersedia | Rp300000/hari\n",
      "B9999CC - Suzuki Ertiga | Tersedia | Rp400000/hari\n",
      "Mobil B1234AA telah dikembalikan.\n",
      "\n",
      "=== DAFTAR MOBIL ===\n",
      "B1234AA - Toyota Avanza | Tersedia | Rp350000/hari\n",
      "B5678BB - Honda Brio | Tersedia | Rp300000/hari\n",
      "B9999CC - Suzuki Ertiga | Tersedia | Rp400000/hari\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "\n",
    "# -----------------------------\n",
    "# Class Mobil\n",
    "# -----------------------------\n",
    "class Mobil:\n",
    "    def __init__(self, plat, merk, model, harga_per_hari):\n",
    "        self.__plat = plat\n",
    "        self.__merk = merk\n",
    "        self.__model = model\n",
    "        self.__harga_per_hari = harga_per_hari\n",
    "        self.__tersedia = True\n",
    "\n",
    "    def get_info(self):\n",
    "        status = \"Tersedia\" if self.__tersedia else \"Disewa\"\n",
    "        return f\"{self.__plat} - {self.__merk} {self.__model} | {status} | Rp{self.__harga_per_hari}/hari\"\n",
    "\n",
    "    def get_plat(self):\n",
    "        return self.__plat\n",
    "\n",
    "    def get_harga(self):\n",
    "        return self.__harga_per_hari\n",
    "\n",
    "    def tersedia(self):\n",
    "        return self.__tersedia\n",
    "\n",
    "    def sewa(self):\n",
    "        self.__tersedia = False\n",
    "\n",
    "    def kembalikan(self):\n",
    "        self.__tersedia = True\n",
    "\n",
    "\n",
    "# -----------------------------\n",
    "# Class Pelanggan\n",
    "# -----------------------------\n",
    "class Pelanggan:\n",
    "    def __init__(self, nama, ktp):\n",
    "        self.nama = nama\n",
    "        self.ktp = ktp\n",
    "\n",
    "    def get_info(self):\n",
    "        return f\"{self.nama} (KTP: {self.ktp})\"\n",
    "\n",
    "\n",
    "# -----------------------------\n",
    "# Class TransaksiRental\n",
    "# -----------------------------\n",
    "class TransaksiRental:\n",
    "    def __init__(self, pelanggan, mobil, lama_sewa):\n",
    "        self.pelanggan = pelanggan\n",
    "        self.mobil = mobil\n",
    "        self.lama_sewa = lama_sewa\n",
    "        self.tanggal_mulai = datetime.now()\n",
    "        self.total_biaya = mobil.get_harga() * lama_sewa\n",
    "        mobil.sewa()\n",
    "\n",
    "    def tampilkan_struk(self):\n",
    "        print(\"\\n====== STRUK RENTAL MOBIL ======\")\n",
    "        print(f\"Pelanggan : {self.pelanggan.get_info()}\")\n",
    "        print(f\"Mobil     : {self.mobil.get_info()}\")\n",
    "        print(f\"Lama Sewa : {self.lama_sewa} hari\")\n",
    "        print(f\"Total Biaya: Rp{self.total_biaya}\")\n",
    "        print(f\"Tanggal Mulai: {self.tanggal_mulai.strftime('%d-%m-%Y %H:%M')}\")\n",
    "        print(\"================================\")\n",
    "\n",
    "\n",
    "# -----------------------------\n",
    "# Class SistemRental\n",
    "# -----------------------------\n",
    "class SistemRental:\n",
    "    def __init__(self):\n",
    "        self.daftar_mobil = []\n",
    "        self.daftar_transaksi = []\n",
    "\n",
    "    def tambah_mobil(self, mobil):\n",
    "        self.daftar_mobil.append(mobil)\n",
    "\n",
    "    def tampilkan_mobil(self):\n",
    "        print(\"\\n=== DAFTAR MOBIL ===\")\n",
    "        for mobil in self.daftar_mobil:\n",
    "            print(mobil.get_info())\n",
    "\n",
    "    def sewa_mobil(self, plat, pelanggan, lama):\n",
    "        for mobil in self.daftar_mobil:\n",
    "            if mobil.get_plat() == plat and mobil.tersedia():\n",
    "                transaksi = TransaksiRental(pelanggan, mobil, lama)\n",
    "                self.daftar_transaksi.append(transaksi)\n",
    "                transaksi.tampilkan_struk()\n",
    "                return\n",
    "        print(\"Mobil tidak tersedia atau tidak ditemukan!\")\n",
    "\n",
    "    def kembalikan_mobil(self, plat):\n",
    "        for mobil in self.daftar_mobil:\n",
    "            if mobil.get_plat() == plat and not mobil.tersedia():\n",
    "                mobil.kembalikan()\n",
    "                print(f\"Mobil {plat} telah dikembalikan.\")\n",
    "                return\n",
    "        print(\"Mobil tidak ditemukan atau sudah tersedia.\")\n",
    "\n",
    "\n",
    "# -----------------------------\n",
    "# Main Program\n",
    "# -----------------------------\n",
    "if __name__ == \"__main__\":\n",
    "    sistem = SistemRental()\n",
    "\n",
    "    # Tambahkan beberapa mobil\n",
    "    sistem.tambah_mobil(Mobil(\"B1234AA\", \"Toyota\", \"Avanza\", 350000))\n",
    "    sistem.tambah_mobil(Mobil(\"B5678BB\", \"Honda\", \"Brio\", 300000))\n",
    "    sistem.tambah_mobil(Mobil(\"B9999CC\", \"Suzuki\", \"Ertiga\", 400000))\n",
    "\n",
    "    # Tampilkan daftar mobil\n",
    "    sistem.tampilkan_mobil()\n",
    "\n",
    "    # Buat pelanggan\n",
    "    pelanggan1 = Pelanggan(\"Andi\", \"1234567890\")\n",
    "\n",
    "    # Sewa mobil\n",
    "    sistem.sewa_mobil(\"B1234AA\", pelanggan1, 3)\n",
    "\n",
    "    # Coba tampilkan daftar mobil lagi\n",
    "    sistem.tampilkan_mobil()\n",
    "\n",
    "    # Kembalikan mobil\n",
    "    sistem.kembalikan_mobil(\"B1234AA\")\n",
    "\n",
    "    # Lihat daftar mobil lagi\n",
    "    sistem.tampilkan_mobil()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
